/*
硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007)

示例1:

 输入: n = 5
 输出：2
 解释: 有两种方式可以凑成总金额:
5=5
5=1+1+1+1+1
示例2:

 输入: n = 10
 输出：4
 解释: 有四种方式可以凑成总金额:
10=10
10=5+5
10=5+1+1+1+1+1
10=1+1+1+1+1+1+1+1+1+1
说明：

注意:

你可以假设：

0 <= n (总金额) <= 1000000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/coin-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
class Solution {
public:
    //方法：首先很容易想到dp，但是没想到怎么去重。
    //其实可以理解成一个多维的dp，就是把每一个硬币组合单独计算再加起来
    //先遍历硬币，之后所有的dp结果都是由当前硬币组合构成，这样不会有重复
    int waysToChange(int n) {
        const int mod = 1000000007;
        vector<int>dp(n+1,1);//初始化为全由1组成
        for(int j:vector<int>{5,10,25})
        {
            for(int i=1;i<=n;i++)
            {
                if(i>=j)
                {
                    dp[i] = (dp[i]+dp[i-j])%mod;
                }
            }
        }
        return dp[n];

    }
};
